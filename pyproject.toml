[tool.poetry]
name = "videodub"
version = "1.0.0"
description = "AI-powered video translation and dubbing pipeline"
authors = ["Vincent <vincent@example.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "videodub", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
structlog = "^22.0.0"
aiohttp = "^3.8.0"
aiofiles = "^23.0.0"
openai = "^1.0.0"
python-dotenv = "^1.0.0"
click = "^8.1.0"
typing-extensions = "^4.0.0"
video-scraper = {git = "https://github.com/vketteni/video-scraper.git"}
pydub = "^0.25.1"
requests = "^2.31.0"
tqdm = "^4.66.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.20.0"
pytest-cov = "^4.0.0"
black = "^22.0.0"
isort = "^5.10.0"
mypy = "^1.0.0"
ruff = "^0.1.0"
factory-boy = "^3.2.0"
respx = "^0.20.0"

[tool.poetry.scripts]
videodub = "videodub.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []
line-length = 88
target-version = "py39"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--strict-markers --disable-warnings"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/videodub"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]